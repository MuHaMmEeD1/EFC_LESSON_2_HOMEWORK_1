// <auto-generated />
using System;
using EFC_LESSON_2_HOMEWORK_1.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFC_LESSON_2_HOMEWORK_1.Migrations
{
    [DbContext(typeof(L3DBContext))]
    [Migration("20240129113023_mig1")]
    partial class mig1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EFC_LESSON_2_HOMEWORK_1.Entitis.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("EFC_LESSON_2_HOMEWORK_1.Entitis.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Authors")
                        .HasColumnType("int");

                    b.Property<int>("Id_Catagory")
                        .HasColumnType("int");

                    b.Property<int>("Id_Press")
                        .HasColumnType("int");

                    b.Property<int>("Id_Themes")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Pages")
                        .HasColumnType("int");

                    b.Property<int?>("PressId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("ThemeId")
                        .HasColumnType("int");

                    b.Property<int>("YearPress")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("Id_Authors");

                    b.HasIndex("Id_Catagory");

                    b.HasIndex("Id_Press");

                    b.HasIndex("Id_Themes");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("PressId");

                    b.HasIndex("ThemeId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("EFC_LESSON_2_HOMEWORK_1.Entitis.Categorle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categorlees");
                });

            modelBuilder.Entity("EFC_LESSON_2_HOMEWORK_1.Entitis.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("EFC_LESSON_2_HOMEWORK_1.Entitis.Facultie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("EFC_LESSON_2_HOMEWORK_1.Entitis.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Id_Facultiy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Facultiy");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("EFC_LESSON_2_HOMEWORK_1.Entitis.Lib", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Libs");
                });

            modelBuilder.Entity("EFC_LESSON_2_HOMEWORK_1.Entitis.Press", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Presss");
                });

            modelBuilder.Entity("EFC_LESSON_2_HOMEWORK_1.Entitis.S_Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateIn")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DateOut")
                        .HasColumnType("Date");

                    b.Property<int>("Id_Book")
                        .HasColumnType("int");

                    b.Property<int>("Id_Lib")
                        .HasColumnType("int");

                    b.Property<int>("Id_Student")
                        .HasColumnType("int");

                    b.Property<int>("LibId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("Id_Book");

                    b.HasIndex("Id_Lib");

                    b.HasIndex("Id_Student");

                    b.HasIndex("LibId");

                    b.HasIndex("StudentId1");

                    b.ToTable("S_Cards");
                });

            modelBuilder.Entity("EFC_LESSON_2_HOMEWORK_1.Entitis.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("Id_Group")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Term")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("EFC_LESSON_2_HOMEWORK_1.Entitis.T_Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateIn")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DateOut")
                        .HasColumnType("Date");

                    b.Property<int>("Id_Book")
                        .HasColumnType("int");

                    b.Property<int>("Id_Lib")
                        .HasColumnType("int");

                    b.Property<int>("Id_Teacher")
                        .HasColumnType("int");

                    b.Property<int>("LibId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("Id_Book");

                    b.HasIndex("Id_Lib");

                    b.HasIndex("Id_Teacher");

                    b.HasIndex("LibId");

                    b.HasIndex("TeacherId1");

                    b.ToTable("T_Cards");
                });

            modelBuilder.Entity("EFC_LESSON_2_HOMEWORK_1.Entitis.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Id_Dap")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Dap");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("EFC_LESSON_2_HOMEWORK_1.Entitis.Theme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Themes");
                });

            modelBuilder.Entity("EFC_LESSON_2_HOMEWORK_1.Entitis.Book", b =>
                {
                    b.HasOne("EFC_LESSON_2_HOMEWORK_1.Entitis.Author", null)
                        .WithMany("Books")
                        .HasForeignKey("AuthorId");

                    b.HasOne("EFC_LESSON_2_HOMEWORK_1.Entitis.Author", "Author")
                        .WithMany()
                        .HasForeignKey("Id_Authors")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EFC_LESSON_2_HOMEWORK_1.Entitis.Categorle", "Categorle")
                        .WithMany()
                        .HasForeignKey("Id_Catagory")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EFC_LESSON_2_HOMEWORK_1.Entitis.Press", "Press")
                        .WithMany()
                        .HasForeignKey("Id_Press")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EFC_LESSON_2_HOMEWORK_1.Entitis.Theme", "Theme")
                        .WithMany()
                        .HasForeignKey("Id_Themes")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EFC_LESSON_2_HOMEWORK_1.Entitis.Press", null)
                        .WithMany("Books")
                        .HasForeignKey("PressId");

                    b.HasOne("EFC_LESSON_2_HOMEWORK_1.Entitis.Theme", null)
                        .WithMany("Books")
                        .HasForeignKey("ThemeId");

                    b.Navigation("Author");

                    b.Navigation("Categorle");

                    b.Navigation("Press");

                    b.Navigation("Theme");
                });

            modelBuilder.Entity("EFC_LESSON_2_HOMEWORK_1.Entitis.Group", b =>
                {
                    b.HasOne("EFC_LESSON_2_HOMEWORK_1.Entitis.Facultie", "Facultie")
                        .WithMany()
                        .HasForeignKey("Id_Facultiy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Facultie");
                });

            modelBuilder.Entity("EFC_LESSON_2_HOMEWORK_1.Entitis.S_Card", b =>
                {
                    b.HasOne("EFC_LESSON_2_HOMEWORK_1.Entitis.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFC_LESSON_2_HOMEWORK_1.Entitis.Book", null)
                        .WithMany("S_Cards")
                        .HasForeignKey("Id_Book")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EFC_LESSON_2_HOMEWORK_1.Entitis.Lib", null)
                        .WithMany("S_Cards")
                        .HasForeignKey("Id_Lib")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EFC_LESSON_2_HOMEWORK_1.Entitis.Student", null)
                        .WithMany("S_Cards")
                        .HasForeignKey("Id_Student")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EFC_LESSON_2_HOMEWORK_1.Entitis.Lib", "Lib")
                        .WithMany()
                        .HasForeignKey("LibId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFC_LESSON_2_HOMEWORK_1.Entitis.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Lib");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EFC_LESSON_2_HOMEWORK_1.Entitis.Student", b =>
                {
                    b.HasOne("EFC_LESSON_2_HOMEWORK_1.Entitis.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("EFC_LESSON_2_HOMEWORK_1.Entitis.T_Card", b =>
                {
                    b.HasOne("EFC_LESSON_2_HOMEWORK_1.Entitis.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFC_LESSON_2_HOMEWORK_1.Entitis.Book", null)
                        .WithMany("T_Cards")
                        .HasForeignKey("Id_Book")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EFC_LESSON_2_HOMEWORK_1.Entitis.Lib", null)
                        .WithMany("T_Cards")
                        .HasForeignKey("Id_Lib")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EFC_LESSON_2_HOMEWORK_1.Entitis.Teacher", null)
                        .WithMany("T_Cards")
                        .HasForeignKey("Id_Teacher")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EFC_LESSON_2_HOMEWORK_1.Entitis.Lib", "Lib")
                        .WithMany()
                        .HasForeignKey("LibId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFC_LESSON_2_HOMEWORK_1.Entitis.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Lib");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("EFC_LESSON_2_HOMEWORK_1.Entitis.Teacher", b =>
                {
                    b.HasOne("EFC_LESSON_2_HOMEWORK_1.Entitis.Department", "Department")
                        .WithMany()
                        .HasForeignKey("Id_Dap")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EFC_LESSON_2_HOMEWORK_1.Entitis.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("EFC_LESSON_2_HOMEWORK_1.Entitis.Book", b =>
                {
                    b.Navigation("S_Cards");

                    b.Navigation("T_Cards");
                });

            modelBuilder.Entity("EFC_LESSON_2_HOMEWORK_1.Entitis.Lib", b =>
                {
                    b.Navigation("S_Cards");

                    b.Navigation("T_Cards");
                });

            modelBuilder.Entity("EFC_LESSON_2_HOMEWORK_1.Entitis.Press", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("EFC_LESSON_2_HOMEWORK_1.Entitis.Student", b =>
                {
                    b.Navigation("S_Cards");
                });

            modelBuilder.Entity("EFC_LESSON_2_HOMEWORK_1.Entitis.Teacher", b =>
                {
                    b.Navigation("T_Cards");
                });

            modelBuilder.Entity("EFC_LESSON_2_HOMEWORK_1.Entitis.Theme", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
